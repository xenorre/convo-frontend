services:
  # Frontend development server
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: convo-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_WS_URL=http://localhost:8000
      - VITE_NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - convo-network
    # depends_on:
    #   - backend  # Commented out - backend is optional
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Backend service (if running together)
  backend:
    image: convo-backend:latest
    container_name: convo-backend-dev
    ports:
      - "8000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
    networks:
      - convo-network
    restart: unless-stopped
    profiles:
      - with-backend

  # Database (if running full stack)
  mongodb:
    image: mongo:7-jammy
    container_name: convo-mongodb-dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=convo_dev
    networks:
      - convo-network
    restart: unless-stopped
    profiles:
      - with-backend

volumes:
  mongodb_data:
    driver: local

networks:
  convo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16